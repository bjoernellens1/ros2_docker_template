ARG ROS_DISTRO=humble
ARG UNDERLAY_WS=/rmp_ws
 
########################################
# Base Image for Bot Mini Control #
########################################
#FROM --platform=linux/arm64 ros:${ROS_DISTRO} as base
FROM ros:${ROS_DISTRO} as base
ENV ROS_DISTRO=${ROS_DISTRO}
SHELL ["/bin/bash", "-c"]
 
# Create Colcon workspace with external dependencies
RUN mkdir -p /rmp_ws/src
WORKDIR /rmp_ws/src
COPY dependencies.repos .
RUN vcs import < dependencies.arm64.repos
 
# Build the base Colcon workspace, installing dependencies first.
WORKDIR /rmp_ws
RUN source /opt/ros/${ROS_DISTRO}/setup.bash \
 && apt-get update -y \
 && rosdep install --from-paths src --ignore-src --rosdistro ${ROS_DISTRO} -y \
 && colcon build --symlink-install

# Use Cyclone DDS as middleware
RUN apt-get update && apt-get install -y --no-install-recommends \
 ros-${ROS_DISTRO}-rmw-cyclonedds-cpp
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

ENV UNDERLAY_WS=${UNDERLAY_WS}

###########################################
# Overlay Image for Bot Mini Control #
###########################################
FROM base AS overlay
 
# Create an overlay Colcon workspace
RUN mkdir -p /overlay_ws/src
WORKDIR /overlay_ws/src

RUN echo "Dummy step"
COPY overlay.repos .
RUN vcs import < overlay.repos

WORKDIR /overlay_ws
# COPY ./tb3_autonomy/ ./src/tb3_autonomy/
# COPY ./tb3_worlds/ ./src/tb3_worlds/
RUN source /rmp_ws/install/setup.bash \
 && colcon build --symlink-install \
 && rosdep install --from-paths src --ignore-src --rosdistro ${ROS_DISTRO} -y

# Set up the entrypoint
COPY ./docker/entrypoint.sh /
RUN chmod +x /entrypoint.sh

COPY ./controller_startup.sh /
RUN chmod +x /controller_startup.sh

COPY ./localization_startup.sh /
RUN chmod +x /localization_startup.sh

ENTRYPOINT [ "/entrypoint.sh" ]